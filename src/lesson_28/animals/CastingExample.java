package lesson_28.animals;

/*
Обьекты могут принадлежать классу Х и при этом могут быть приведены к другому типу
если между классами есть связь наследования
Это называется кастингом(casting)
Два вида:
- восходящее преобразование (upcasting) - преобразование обьекта дочернего класса в тип родительского класса
- нисходящее преобразование (downcasting) - рпеобразование обьекта родительского класса обратно в тип дочернего класса
 */

import java.lang.reflect.AnnotatedElement;

public class CastingExample {

    public static void main(String[] args) {

        // Восходяшее преобразование происходит автоматически
        Animal animal = new Cat(); // тип Cat автоматически преобразуется к типу Animal

        /*
        !!! ВАЖНО !!!
        Тип ссылочной переменной определяет:
        - ссылки на обьекты каких типов могут храниться в этой переменной
        - список методов которые можно вызвать, обращаясь к этой переменой

        Ссылочная может хранить обьект своего класса или любого ребенка

        Какая реализация будет вызвана определяется типом обьекта который привязан по ссылке
         */

        animal.voice();

        Animal animal2 = new Hamster(); // неявное автоматическое преобразование к типу энимал

        // сейчас обьект на Hamster
        animal2.voice();


        Animal[] animals = new Animal[3];
        animals[0] = animal;
        animals[1] = animal2;
        animals[2] = new Dog();

        for (int i = 0; i < animals.length; i++) {
            animals[i].voice();
        }

        //  TODO нисходящее преобразование


    }
}
